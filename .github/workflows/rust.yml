name: Rust

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  LIB_PACKAGE_NAME: gymnasium
  PYTHON_PACKAGE_NAME: gymnasium_py

jobs:
  cargo:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - 1.56 # Minimal supported Rust version (MSRV)
          - stable
          - beta
          - nightly
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.event_name == 'push'}}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}

      ## cargo fmt
      - name: cargo fmt
        run: cargo fmt --all --check --verbose

      ## cargo check
      - name: cargo check
        run: cargo check --workspace --exclude ${{ env.PYTHON_PACKAGE_NAME }} --all-targets --verbose
      - name: cargo check --no-default-features
        run: cargo check --workspace --exclude ${{ env.PYTHON_PACKAGE_NAME }} --all-targets --no-default-features --verbose
      - name: cargo check --all-features
        run: cargo check --workspace --exclude ${{ env.PYTHON_PACKAGE_NAME }} --all-targets --all-features --verbose

      ## cargo clippy
      - name: cargo clippy
        run: cargo clippy --workspace --exclude ${{ env.PYTHON_PACKAGE_NAME }} --all-targets --all-features --no-deps --verbose -- --deny warnings

      ## cargo test
      - name: cargo test (default features)
        run: cargo test --workspace --exclude ${{ env.PYTHON_PACKAGE_NAME }} --all-targets --verbose
      - name: cargo test --no-default-features
        run: cargo test --workspace --exclude ${{ env.PYTHON_PACKAGE_NAME }} --all-targets --no-default-features --verbose
      - name: cargo test --all-features
        run: cargo test --workspace --exclude ${{ env.PYTHON_PACKAGE_NAME }} --all-targets --all-features --verbose

      ## cargo test --doc
      - name: cargo test --doc (default features)
        run: cargo test --workspace --exclude ${{ env.PYTHON_PACKAGE_NAME }} --doc --verbose
      - name: cargo test --doc --no-default-features
        run: cargo test --workspace --exclude ${{ env.PYTHON_PACKAGE_NAME }} --doc --no-default-features --verbose
      - name: cargo test --doc --all-features
        run: cargo test --workspace --exclude ${{ env.PYTHON_PACKAGE_NAME }} --doc --all-features --verbose

      ## cargo doc
      - name: cargo doc
        run: cargo doc --workspace --exclude ${{ env.PYTHON_PACKAGE_NAME }} --all-features --no-deps --verbose
      - name: doc --document-private-items
        run: cargo doc --workspace --exclude ${{ env.PYTHON_PACKAGE_NAME }} --all-features --no-deps --document-private-items --verbose

  cross:
    needs: cargo
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - stable
          - beta
        target:
          - aarch64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.event_name == 'push'}}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}

      ## Install cross
      - name: Install cross
        run: cargo install cross --locked

      ## cross check
      - name: cross check
        run: cross check --workspace --exclude ${{ env.PYTHON_PACKAGE_NAME }} --all-targets --target ${{ matrix.target }} --verbose
      - name: cross check --no-default-features
        run: cross check --workspace --exclude ${{ env.PYTHON_PACKAGE_NAME }} --all-targets --no-default-features --target ${{ matrix.target }} --verbose
      - name: cross check --all-features
        run: cross check --workspace --exclude ${{ env.PYTHON_PACKAGE_NAME }} --all-targets --all-features --target ${{ matrix.target }} --verbose

  publish:
    if: ${{ github.event_name == 'release' }}
    needs:
      - cargo
      - cross
    runs-on: ubuntu-latest
    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        if: ${{ env.CARGO_REGISTRY_TOKEN != '' }}
      - uses: Swatinem/rust-cache@v2
        if: ${{ env.CARGO_REGISTRY_TOKEN != '' }}
        with:
          save-if: ${{ github.event_name == 'push'}}
      - uses: actions-rs/toolchain@v1
        if: ${{ env.CARGO_REGISTRY_TOKEN != '' }}
        with:
          toolchain: stable

      ## Publish to crates.io
      - name: Publish crate (library)
        if: ${{ env.CARGO_REGISTRY_TOKEN != '' }}
        run: cargo publish --no-verify --package ${{ env.LIB_PACKAGE_NAME }} --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

  codecov:
    needs: cargo
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.event_name == 'push'}}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: taiki-e/install-action@cargo-llvm-cov

      ## Generate coverage with cargo llvm-cov
      - name: Generate coverage
        run: cargo llvm-cov --workspace --exclude ${{ env.PYTHON_PACKAGE_NAME }} --all-features --lcov --output-path lcov.info

      ## Upload coverage to codecov.io
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: true
